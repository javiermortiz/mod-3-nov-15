/* 
In the flex layout model, the children of a flex container can be laid out in any direction, 
and can “flex” their sizes, either growing to fill unused space or shrinking to avoid overflowing the parent.
- you change the display of the container to flex
- justify-content: distributes children over the main axis (x-axis is the default)
- align-items: distributes children over the secondary axis 
*/
* {
    box-sizing: border-box;
}

body {
    background-color: lightgray;
}

.box > div {
    background-color: pink;
    border: 2px solid red;
    border-radius: 5px;
    padding: 20px;
    width: 80px;
    height: 80px;
    text-align: center;
}

.box {
    background-color: white;
    width: 80%;
    height: 500px;
    display: flex;
    justify-content: space-between;
    /* justify -> main axis */
    align-items: flex-end;
    flex-direction: row;
    margin: 50px;
}

/* 
- display:inline-flex (an inline div will adjust to the width of its contents)
- gap spacing to apply space between the items.
*/
.box2 > div {
    background-color: pink;
    border: 2px solid red;
    border-radius: 5px;
    padding: 20px;
    width: 80px;
    height: 80px;
    text-align: center;
}

.box2 {
    background-color: white;
    margin: 50px;
    display: inline-flex;
    flex-direction: column;
    gap: 20px;
    padding: 20px;
}

.box2 {
    padding: 40px;
}
/* 
- A child also has flex properties
*/
.box3 > div {
    background-color: pink;
    border: 2px solid red;
    border-radius: 5px;
    padding: 20px;
    text-align: center;
}

.box3 {
    background-color: white;
    margin: 50px;
    display: flex;
}

/* 
flex property on a child of a flex-container as a shorthand for grow, shrink and basis
*/
.box3 > div {
    /* flex-grow: 1;
    flex-shrink: 1; */
    /* flex-basis: 90px; */
}
.one {
    flex: 0  0 300px;
    /* flex-grow: 0;
    flex-shrink: 1;
    flex-basis: auto; */
}

.two {
    flex: 0 2 300px;
}

.three {
    flex: 0 1 300px;
}

/* flex-grow: How much of the positive free space does this item get? */
/* .one {
    flex: 3 0 auto;
}

.two {
    flex: 1 0 auto;
}

.three {
    flex: 1 0 auto;
} */

/* flex-basis: What is the size of the item before growing or shrinking? */
/* .box3 > div {
    flex: 0 1 100px;
} */

/* flex-shrink: How much negative free space can be removed from this item? */
/* .box3 > div {
    flex: 0 1 200px;
}

div.one {
    flex: 0 2 200px;
} */
